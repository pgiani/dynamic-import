{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/themeteorchef:bert","imported":["Bert"],"specifiers":[{"kind":"named","imported":"Bert","local":"Bert"}]},{"source":"./validation.js","imported":[],"specifiers":[]}],"exports":{"exported":["handleSignup","options"],"specifiers":[{"kind":"local","local":"handleSignup","exported":"default"},{"kind":"local","local":"options","exported":"default"}]}}},"options":{"filename":"imports/modules/signup.js","filenameRelative":"imports/modules/signup.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/modules/signup.js.map","sourceFileName":"imports/modules/signup.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"signup"},"ignored":false,"code":"module.export({\n  \"default\": function () {\n    return handleSignup;\n  }\n});\nvar browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n  browserHistory: function (v) {\n    browserHistory = v;\n  }\n}, 0);\nvar Accounts = void 0;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 1);\nvar Bert = void 0;\nmodule.watch(require(\"meteor/themeteorchef:bert\"), {\n  Bert: function (v) {\n    Bert = v;\n  }\n}, 2);\nmodule.watch(require(\"./validation.js\"));\nvar component = void 0;\n\nvar getUserData = function () {\n  return {\n    email: document.querySelector('[name=\"emailAddress\"]').value,\n    password: document.querySelector('[name=\"password\"]').value,\n    profile: {\n      name: {\n        first: document.querySelector('[name=\"firstName\"]').value,\n        last: document.querySelector('[name=\"lastName\"]').value\n      }\n    }\n  };\n};\n\nvar signup = function () {\n  var user = getUserData();\n  Accounts.createUser(user, function (error) {\n    if (error) {\n      Bert.alert(error.reason, 'danger');\n    } else {\n      browserHistory.push('/');\n      Bert.alert('Welcome!', 'success');\n    }\n  });\n};\n\nvar validate = function () {\n  $(component.signupForm).validate({\n    rules: {\n      firstName: {\n        required: true\n      },\n      lastName: {\n        required: true\n      },\n      emailAddress: {\n        required: true,\n        email: true\n      },\n      password: {\n        required: true,\n        minlength: 6\n      }\n    },\n    messages: {\n      firstName: {\n        required: 'First name?'\n      },\n      lastName: {\n        required: 'Last name?'\n      },\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?'\n      },\n      password: {\n        required: 'Need a password here.',\n        minlength: 'Use at least six characters, please.'\n      }\n    },\n    submitHandler: function () {\n      signup();\n    }\n  });\n};\n\nfunction handleSignup(options) {\n  component = options.component;\n  validate();\n}","map":{"version":3,"sources":["imports/modules/signup.js"],"names":["module","export","handleSignup","browserHistory","watch","require","v","Accounts","Bert","component","getUserData","email","document","querySelector","value","password","profile","name","first","last","signup","user","createUser","error","alert","reason","push","validate","$","signupForm","rules","firstName","required","lastName","emailAddress","minlength","messages","submitHandler","options"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAAC,aAAQ;AAAA,WAAIC,YAAJ;AAAA;AAAT,CAAd;AAA0C,IAAIC,uBAAJ;AAAmBH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,gBAAD,YAAgBG,CAAhB,EAAkB;AAACH,qBAAeG,CAAf;AAAiB;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIC,iBAAJ;AAAaP,OAAOI,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACE,UAAD,YAAUD,CAAV,EAAY;AAACC,eAASD,CAAT;AAAW;AAAxB,CAA7C,EAAuE,CAAvE;AAA0E,IAAIE,aAAJ;AAASR,OAAOI,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACG,MAAD,YAAMF,CAAN,EAAQ;AAACE,WAAKF,CAAL;AAAO;AAAhB,CAAlD,EAAoE,CAApE;AAAuEN,OAAOI,KAAP,CAAaC,QAAQ,iBAAR,CAAb;AAOlT,IAAII,kBAAJ;;AAEA,IAAMC,cAAc;AAAA,SAAO;AACzBC,WAAOC,SAASC,aAAT,CAAuB,uBAAvB,EAAgDC,KAD9B;AAEzBC,cAAUH,SAASC,aAAT,CAAuB,mBAAvB,EAA4CC,KAF7B;AAGzBE,aAAS;AACPC,YAAM;AACJC,eAAON,SAASC,aAAT,CAAuB,oBAAvB,EAA6CC,KADhD;AAEJK,cAAMP,SAASC,aAAT,CAAuB,mBAAvB,EAA4CC;AAF9C;AADC;AAHgB,GAAP;AAAA,CAApB;;AAWA,IAAMM,SAAS,YAAM;AACnB,MAAMC,OAAOX,aAAb;AAEAH,WAASe,UAAT,CAAoBD,IAApB,EAA0B,UAACE,KAAD,EAAW;AACnC,QAAIA,KAAJ,EAAW;AACTf,WAAKgB,KAAL,CAAWD,MAAME,MAAjB,EAAyB,QAAzB;AACD,KAFD,MAEO;AACLtB,qBAAeuB,IAAf,CAAoB,GAApB;AACAlB,WAAKgB,KAAL,CAAW,UAAX,EAAuB,SAAvB;AACD;AACF,GAPD;AAQD,CAXD;;AAaA,IAAMG,WAAW,YAAM;AACrBC,IAAEnB,UAAUoB,UAAZ,EAAwBF,QAAxB,CAAiC;AAC/BG,WAAO;AACLC,iBAAW;AACTC,kBAAU;AADD,OADN;AAILC,gBAAU;AACRD,kBAAU;AADF,OAJL;AAOLE,oBAAc;AACZF,kBAAU,IADE;AAEZrB,eAAO;AAFK,OAPT;AAWLI,gBAAU;AACRiB,kBAAU,IADF;AAERG,mBAAW;AAFH;AAXL,KADwB;AAiB/BC,cAAU;AACRL,iBAAW;AACTC,kBAAU;AADD,OADH;AAIRC,gBAAU;AACRD,kBAAU;AADF,OAJF;AAORE,oBAAc;AACZF,kBAAU,6BADE;AAEZrB,eAAO;AAFK,OAPN;AAWRI,gBAAU;AACRiB,kBAAU,uBADF;AAERG,mBAAW;AAFH;AAXF,KAjBqB;AAiC/BE,iBAjC+B,cAiCf;AAAEjB;AAAW;AAjCE,GAAjC;AAmCD,CApCD;;AAsCe,SAASlB,YAAT,CAAsBoC,OAAtB,EAA+B;AAC5C7B,cAAY6B,QAAQ7B,SAApB;AACAkB;AACD","file":"imports/modules/signup.js.map","sourcesContent":["/* eslint-disable no-undef */\n\nimport { browserHistory } from 'react-router';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Bert } from 'meteor/themeteorchef:bert';\nimport './validation.js';\n\nlet component;\n\nconst getUserData = () => ({\n  email: document.querySelector('[name=\"emailAddress\"]').value,\n  password: document.querySelector('[name=\"password\"]').value,\n  profile: {\n    name: {\n      first: document.querySelector('[name=\"firstName\"]').value,\n      last: document.querySelector('[name=\"lastName\"]').value,\n    },\n  },\n});\n\nconst signup = () => {\n  const user = getUserData();\n\n  Accounts.createUser(user, (error) => {\n    if (error) {\n      Bert.alert(error.reason, 'danger');\n    } else {\n      browserHistory.push('/');\n      Bert.alert('Welcome!', 'success');\n    }\n  });\n};\n\nconst validate = () => {\n  $(component.signupForm).validate({\n    rules: {\n      firstName: {\n        required: true,\n      },\n      lastName: {\n        required: true,\n      },\n      emailAddress: {\n        required: true,\n        email: true,\n      },\n      password: {\n        required: true,\n        minlength: 6,\n      },\n    },\n    messages: {\n      firstName: {\n        required: 'First name?',\n      },\n      lastName: {\n        required: 'Last name?',\n      },\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?',\n      },\n      password: {\n        required: 'Need a password here.',\n        minlength: 'Use at least six characters, please.',\n      },\n    },\n    submitHandler() { signup(); },\n  });\n};\n\nexport default function handleSignup(options) {\n  component = options.component;\n  validate();\n}\n"]},"hash":"633372bad16a93f188d1bd23f708288dbe8c01b3"}
