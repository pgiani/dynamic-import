{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/themeteorchef:bert","imported":["Bert"],"specifiers":[{"kind":"named","imported":"Bert","local":"Bert"}]},{"source":"./validation.js","imported":[],"specifiers":[]}],"exports":{"exported":["handleRecoverPassword","options"],"specifiers":[{"kind":"local","local":"handleRecoverPassword","exported":"default"},{"kind":"local","local":"options","exported":"default"}]}}},"options":{"filename":"imports/modules/recover-password.js","filenameRelative":"imports/modules/recover-password.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/modules/recover-password.js.map","sourceFileName":"imports/modules/recover-password.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"recover-password"},"ignored":false,"code":"module.export({\n  \"default\": function () {\n    return handleRecoverPassword;\n  }\n});\nvar Accounts = void 0;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 0);\nvar Bert = void 0;\nmodule.watch(require(\"meteor/themeteorchef:bert\"), {\n  Bert: function (v) {\n    Bert = v;\n  }\n}, 1);\nmodule.watch(require(\"./validation.js\"));\nvar component = void 0;\n\nvar handleRecovery = function () {\n  Accounts.forgotPassword({\n    email: document.querySelector('[name=\"emailAddress\"]').value\n  }, function (error) {\n    if (error) {\n      Bert.alert(error.reason, 'warning');\n    } else {\n      Bert.alert('Check your inbox for a reset link!', 'success');\n    }\n  });\n};\n\nvar validate = function () {\n  $(component.recoverPasswordForm).validate({\n    rules: {\n      emailAddress: {\n        required: true,\n        email: true\n      }\n    },\n    messages: {\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?'\n      }\n    },\n    submitHandler: function () {\n      handleRecovery();\n    }\n  });\n};\n\nfunction handleRecoverPassword(options) {\n  component = options.component;\n  validate();\n}","map":{"version":3,"sources":["imports/modules/recover-password.js"],"names":["module","export","handleRecoverPassword","Accounts","watch","require","v","Bert","component","handleRecovery","forgotPassword","email","document","querySelector","value","error","alert","reason","validate","$","recoverPasswordForm","rules","emailAddress","required","messages","submitHandler","options"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAAC,aAAQ;AAAA,WAAIC,qBAAJ;AAAA;AAAT,CAAd;AAAmD,IAAIC,iBAAJ;AAAaH,OAAOI,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACF,UAAD,YAAUG,CAAV,EAAY;AAACH,eAASG,CAAT;AAAW;AAAxB,CAA7C,EAAuE,CAAvE;AAA0E,IAAIC,aAAJ;AAASP,OAAOI,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACE,MAAD,YAAMD,CAAN,EAAQ;AAACC,WAAKD,CAAL;AAAO;AAAhB,CAAlD,EAAoE,CAApE;AAAuEN,OAAOI,KAAP,CAAaC,QAAQ,iBAAR,CAAb;AAM1N,IAAIG,kBAAJ;;AAEA,IAAMC,iBAAiB,YAAM;AAC3BN,WAASO,cAAT,CAAwB;AACtBC,WAAOC,SAASC,aAAT,CAAuB,uBAAvB,EAAgDC;AADjC,GAAxB,EAEG,UAACC,KAAD,EAAW;AACZ,QAAIA,KAAJ,EAAW;AACTR,WAAKS,KAAL,CAAWD,MAAME,MAAjB,EAAyB,SAAzB;AACD,KAFD,MAEO;AACLV,WAAKS,KAAL,CAAW,oCAAX,EAAiD,SAAjD;AACD;AACF,GARD;AASD,CAVD;;AAYA,IAAME,WAAW,YAAM;AACrBC,IAAEX,UAAUY,mBAAZ,EAAiCF,QAAjC,CAA0C;AACxCG,WAAO;AACLC,oBAAc;AACZC,kBAAU,IADE;AAEZZ,eAAO;AAFK;AADT,KADiC;AAOxCa,cAAU;AACRF,oBAAc;AACZC,kBAAU,6BADE;AAEZZ,eAAO;AAFK;AADN,KAP8B;AAaxCc,iBAbwC,cAaxB;AAAEhB;AAAmB;AAbG,GAA1C;AAeD,CAhBD;;AAkBe,SAASP,qBAAT,CAA+BwB,OAA/B,EAAwC;AACrDlB,cAAYkB,QAAQlB,SAApB;AACAU;AACD","file":"imports/modules/recover-password.js.map","sourcesContent":["/* eslint-disable no-undef */\n\nimport { Accounts } from 'meteor/accounts-base';\nimport { Bert } from 'meteor/themeteorchef:bert';\nimport './validation.js';\n\nlet component;\n\nconst handleRecovery = () => {\n  Accounts.forgotPassword({\n    email: document.querySelector('[name=\"emailAddress\"]').value,\n  }, (error) => {\n    if (error) {\n      Bert.alert(error.reason, 'warning');\n    } else {\n      Bert.alert('Check your inbox for a reset link!', 'success');\n    }\n  });\n};\n\nconst validate = () => {\n  $(component.recoverPasswordForm).validate({\n    rules: {\n      emailAddress: {\n        required: true,\n        email: true,\n      },\n    },\n    messages: {\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?',\n      },\n    },\n    submitHandler() { handleRecovery(); },\n  });\n};\n\nexport default function handleRecoverPassword(options) {\n  component = options.component;\n  validate();\n}\n"]},"hash":"e810e7274a65025d76d9c6b47ef5c5767ea63acd"}
