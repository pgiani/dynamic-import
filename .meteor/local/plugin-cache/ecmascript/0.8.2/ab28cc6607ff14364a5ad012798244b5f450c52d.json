{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/startup/server/fixtures.js","filenameRelative":"imports/startup/server/fixtures.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/startup/server/fixtures.js.map","sourceFileName":"imports/startup/server/fixtures.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"fixtures"},"ignored":false,"code":"var Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Roles = void 0;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function (v) {\n    Roles = v;\n  }\n}, 1);\nvar Accounts = void 0;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 2);\n\nif (!Meteor.isProduction) {\n  var users = [{\n    email: 'admin@admin.com',\n    password: 'password',\n    profile: {\n      name: {\n        first: 'Carl',\n        last: 'Winslow'\n      }\n    },\n    roles: ['admin']\n  }];\n  users.forEach(function (_ref) {\n    var email = _ref.email,\n        password = _ref.password,\n        profile = _ref.profile,\n        roles = _ref.roles;\n    var userExists = Meteor.users.findOne({\n      'emails.address': email\n    });\n\n    if (!userExists) {\n      var userId = Accounts.createUser({\n        email: email,\n        password: password,\n        profile: profile\n      });\n      Roles.addUsersToRoles(userId, roles);\n    }\n  });\n}","map":{"version":3,"sources":["imports/startup/server/fixtures.js"],"names":["Meteor","module","watch","require","v","Roles","Accounts","isProduction","users","email","password","profile","name","first","last","roles","forEach","userExists","findOne","userId","createUser","addUsersToRoles"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,cAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACE,OAAD,YAAOD,CAAP,EAAS;AAACC,YAAMD,CAAN;AAAQ;AAAlB,CAA9C,EAAkE,CAAlE;AAAqE,IAAIE,iBAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACG,UAAD,YAAUF,CAAV,EAAY;AAACE,eAASF,CAAT;AAAW;AAAxB,CAA7C,EAAuE,CAAvE;;AAItK,IAAI,CAACJ,OAAOO,YAAZ,EAA0B;AACxB,MAAMC,QAAQ,CAAC;AACbC,WAAO,iBADM;AAEbC,cAAU,UAFG;AAGbC,aAAS;AACPC,YAAM;AAAEC,eAAO,MAAT;AAAiBC,cAAM;AAAvB;AADC,KAHI;AAMbC,WAAO,CAAC,OAAD;AANM,GAAD,CAAd;AASAP,QAAMQ,OAAN,CAAc,gBAAyC;AAAA,QAAtCP,KAAsC,QAAtCA,KAAsC;AAAA,QAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZI,KAAY,QAAZA,KAAY;AACrD,QAAME,aAAajB,OAAOQ,KAAP,CAAaU,OAAb,CAAqB;AAAE,wBAAkBT;AAApB,KAArB,CAAnB;;AAEA,QAAI,CAACQ,UAAL,EAAiB;AACf,UAAME,SAASb,SAASc,UAAT,CAAoB;AAAEX,oBAAF;AAASC,0BAAT;AAAmBC;AAAnB,OAApB,CAAf;AACAN,YAAMgB,eAAN,CAAsBF,MAAtB,EAA8BJ,KAA9B;AACD;AACF,GAPD;AAQD","file":"imports/startup/server/fixtures.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Accounts } from 'meteor/accounts-base';\n\nif (!Meteor.isProduction) {\n  const users = [{\n    email: 'admin@admin.com',\n    password: 'password',\n    profile: {\n      name: { first: 'Carl', last: 'Winslow' },\n    },\n    roles: ['admin'],\n  }];\n\n  users.forEach(({ email, password, profile, roles }) => {\n    const userExists = Meteor.users.findOne({ 'emails.address': email });\n\n    if (!userExists) {\n      const userId = Accounts.createUser({ email, password, profile });\n      Roles.addUsersToRoles(userId, roles);\n    }\n  });\n}\n"]},"hash":"ab28cc6607ff14364a5ad012798244b5f450c52d"}
