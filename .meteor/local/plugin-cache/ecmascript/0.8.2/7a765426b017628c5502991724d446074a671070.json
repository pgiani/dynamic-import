{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/themeteorchef:bert","imported":["Bert"],"specifiers":[{"kind":"named","imported":"Bert","local":"Bert"}]},{"source":"./validation.js","imported":[],"specifiers":[]}],"exports":{"exported":["handleLogin","options"],"specifiers":[{"kind":"local","local":"handleLogin","exported":"default"},{"kind":"local","local":"options","exported":"default"}]}}},"options":{"filename":"imports/modules/login.js","filenameRelative":"imports/modules/login.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/modules/login.js.map","sourceFileName":"imports/modules/login.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"login"},"ignored":false,"code":"module.export({\n  \"default\": function () {\n    return handleLogin;\n  }\n});\nvar browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n  browserHistory: function (v) {\n    browserHistory = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Bert = void 0;\nmodule.watch(require(\"meteor/themeteorchef:bert\"), {\n  Bert: function (v) {\n    Bert = v;\n  }\n}, 2);\nmodule.watch(require(\"./validation.js\"));\nvar component = void 0;\n\nvar login = function () {\n  var email = document.querySelector('[name=\"emailAddress\"]').value;\n  var password = document.querySelector('[name=\"password\"]').value;\n  Meteor.loginWithPassword(email, password, function (error) {\n    if (error) {\n      Bert.alert(error.reason, 'warning');\n    } else {\n      Bert.alert('Logged in!', 'success');\n      var location = component.props.location;\n\n      if (location.state && location.state.nextPathname) {\n        browserHistory.push(location.state.nextPathname);\n      } else {\n        browserHistory.push('/');\n      }\n    }\n  });\n};\n\nvar validate = function () {\n  $(component.loginForm).validate({\n    rules: {\n      emailAddress: {\n        required: true,\n        email: true\n      },\n      password: {\n        required: true\n      }\n    },\n    messages: {\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?'\n      },\n      password: {\n        required: 'Need a password here.'\n      }\n    },\n    submitHandler: function () {\n      login();\n    }\n  });\n};\n\nfunction handleLogin(options) {\n  component = options.component;\n  validate();\n}","map":{"version":3,"sources":["imports/modules/login.js"],"names":["module","export","handleLogin","browserHistory","watch","require","v","Meteor","Bert","component","login","email","document","querySelector","value","password","loginWithPassword","error","alert","reason","location","props","state","nextPathname","push","validate","$","loginForm","rules","emailAddress","required","messages","submitHandler","options"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAAC,aAAQ;AAAA,WAAIC,WAAJ;AAAA;AAAT,CAAd;AAAyC,IAAIC,uBAAJ;AAAmBH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,gBAAD,YAAgBG,CAAhB,EAAkB;AAACH,qBAAeG,CAAf;AAAiB;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIC,eAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,aAAJ;AAASR,OAAOI,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACG,MAAD,YAAMF,CAAN,EAAQ;AAACE,WAAKF,CAAL;AAAO;AAAhB,CAAlD,EAAoE,CAApE;AAAuEN,OAAOI,KAAP,CAAaC,QAAQ,iBAAR,CAAb;AAOpS,IAAII,kBAAJ;;AAEA,IAAMC,QAAQ,YAAM;AAClB,MAAMC,QAAQC,SAASC,aAAT,CAAuB,uBAAvB,EAAgDC,KAA9D;AACA,MAAMC,WAAWH,SAASC,aAAT,CAAuB,mBAAvB,EAA4CC,KAA7D;AAEAP,SAAOS,iBAAP,CAAyBL,KAAzB,EAAgCI,QAAhC,EAA0C,UAACE,KAAD,EAAW;AACnD,QAAIA,KAAJ,EAAW;AACTT,WAAKU,KAAL,CAAWD,MAAME,MAAjB,EAAyB,SAAzB;AACD,KAFD,MAEO;AACLX,WAAKU,KAAL,CAAW,YAAX,EAAyB,SAAzB;AADK,UAGGE,QAHH,GAGgBX,UAAUY,KAH1B,CAGGD,QAHH;;AAIL,UAAIA,SAASE,KAAT,IAAkBF,SAASE,KAAT,CAAeC,YAArC,EAAmD;AACjDpB,uBAAeqB,IAAf,CAAoBJ,SAASE,KAAT,CAAeC,YAAnC;AACD,OAFD,MAEO;AACLpB,uBAAeqB,IAAf,CAAoB,GAApB;AACD;AACF;AACF,GAbD;AAcD,CAlBD;;AAoBA,IAAMC,WAAW,YAAM;AACrBC,IAAEjB,UAAUkB,SAAZ,EAAuBF,QAAvB,CAAgC;AAC9BG,WAAO;AACLC,oBAAc;AACZC,kBAAU,IADE;AAEZnB,eAAO;AAFK,OADT;AAKLI,gBAAU;AACRe,kBAAU;AADF;AALL,KADuB;AAU9BC,cAAU;AACRF,oBAAc;AACZC,kBAAU,6BADE;AAEZnB,eAAO;AAFK,OADN;AAKRI,gBAAU;AACRe,kBAAU;AADF;AALF,KAVoB;AAmB9BE,iBAnB8B,cAmBd;AAAEtB;AAAU;AAnBE,GAAhC;AAqBD,CAtBD;;AAwBe,SAASR,WAAT,CAAqB+B,OAArB,EAA8B;AAC3CxB,cAAYwB,QAAQxB,SAApB;AACAgB;AACD","file":"imports/modules/login.js.map","sourcesContent":["/* eslint-disable no-undef */\n\nimport { browserHistory } from 'react-router';\nimport { Meteor } from 'meteor/meteor';\nimport { Bert } from 'meteor/themeteorchef:bert';\nimport './validation.js';\n\nlet component;\n\nconst login = () => {\n  const email = document.querySelector('[name=\"emailAddress\"]').value;\n  const password = document.querySelector('[name=\"password\"]').value;\n\n  Meteor.loginWithPassword(email, password, (error) => {\n    if (error) {\n      Bert.alert(error.reason, 'warning');\n    } else {\n      Bert.alert('Logged in!', 'success');\n\n      const { location } = component.props;\n      if (location.state && location.state.nextPathname) {\n        browserHistory.push(location.state.nextPathname);\n      } else {\n        browserHistory.push('/');\n      }\n    }\n  });\n};\n\nconst validate = () => {\n  $(component.loginForm).validate({\n    rules: {\n      emailAddress: {\n        required: true,\n        email: true,\n      },\n      password: {\n        required: true,\n      },\n    },\n    messages: {\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?',\n      },\n      password: {\n        required: 'Need a password here.',\n      },\n    },\n    submitHandler() { login(); },\n  });\n};\n\nexport default function handleLogin(options) {\n  component = options.component;\n  validate();\n}\n"]},"hash":"7a765426b017628c5502991724d446074a671070"}
