{"metadata":{"usedHelpers":["classCallCheck","typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/themeteorchef:bert/bert.js","filenameRelative":"packages/themeteorchef:bert/bert.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/themeteorchef:bert/bert.js.map","sourceFileName":"packages/themeteorchef:bert/bert.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"bert"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar BertAlert = function () {\n  function BertAlert() {\n    (0, _classCallCheck3.default)(this, BertAlert);\n    this.styles = ['fixed-top', 'fixed-bottom', 'growl-top-left', 'growl-top-right', 'growl-bottom-left', 'growl-bottom-right'];\n    this.types = ['default', 'success', 'info', 'warning', 'danger'];\n    this.icons = {\n      \"default\": 'fa-bell',\n      success: 'fa-check',\n      info: 'fa-info',\n      warning: 'fa-warning',\n      danger: 'fa-remove'\n    };\n    this.defaults = {\n      hideDelay: 3500,\n      style: 'fixed-top',\n      type: 'default'\n    };\n  }\n\n  BertAlert.prototype.alert = function () {\n    function alert() {\n      var _this = this,\n          _arguments = arguments;\n\n      if (this.isVisible()) {\n        this.hide();\n        setTimeout(function () {\n          _this.handleAlert(_arguments);\n        }, 300);\n      } else {\n        this.handleAlert(arguments);\n      }\n    }\n\n    return alert;\n  }();\n\n  BertAlert.prototype.isVisible = function () {\n    function isVisible() {\n      return $('.bert-alert').hasClass('show');\n    }\n\n    return isVisible;\n  }();\n\n  BertAlert.prototype.handleAlert = function () {\n    function handleAlert(alert) {\n      var _this2 = this;\n\n      this.registerClickHandler();\n      this.setBertOnSession(alert);\n      setTimeout(function () {\n        _this2.show();\n      }, 20);\n      this.bertTimer();\n    }\n\n    return handleAlert;\n  }();\n\n  BertAlert.prototype.registerClickHandler = function () {\n    function registerClickHandler() {\n      var _this3 = this;\n\n      $('.bert-alert').off('click');\n      $('.bert-alert').on('click', function () {\n        _this3.hide();\n      });\n    }\n\n    return registerClickHandler;\n  }();\n\n  BertAlert.prototype.bertTimer = function () {\n    function bertTimer() {\n      var _this4 = this;\n\n      clearTimeout(this.timer);\n      this.timer = setTimeout(function () {\n        _this4.hide();\n      }, this.defaults.hideDelay);\n      return this.timer;\n    }\n\n    return bertTimer;\n  }();\n\n  BertAlert.prototype.show = function () {\n    function show() {\n      $('.bert-alert').addClass('show').delay(25).queue(function () {\n        $('.bert-alert').addClass('animate').dequeue();\n      });\n    }\n\n    return show;\n  }();\n\n  BertAlert.prototype.hide = function () {\n    function hide() {\n      $('.bert-alert').removeClass('animate');\n      setTimeout(function () {\n        $('.bert-alert').removeClass('show');\n        Session.set('bertAlert', null);\n      }, 300);\n    }\n\n    return hide;\n  }();\n\n  BertAlert.prototype.setBertOnSession = function () {\n    function setBertOnSession(alert) {\n      if ((0, _typeof3.default)(alert[0]) === 'object') {\n        var type = alert[0].type || this.defaults.type;\n        Session.set('bertAlert', {\n          title: alert[0].title || \"\",\n          message: alert[0].message || \"\",\n          type: type,\n          style: alert[0].style || this.defaults.style,\n          icon: alert[0].icon || this.icons[type]\n        });\n      } else {\n        var _type = alert[1] || this.defaults.type;\n\n        Session.set('bertAlert', {\n          message: alert[0] || \"\",\n          type: _type,\n          style: alert[2] || this.defaults.style,\n          icon: alert[3] || this.icons[_type]\n        });\n      }\n    }\n\n    return setBertOnSession;\n  }();\n\n  return BertAlert;\n}();\n\nBert = new BertAlert();","map":{"version":3,"sources":["packages/themeteorchef:bert/bert.js"],"names":["BertAlert","styles","types","icons","success","info","warning","danger","defaults","hideDelay","style","type","alert","isVisible","hide","setTimeout","handleAlert","arguments","$","hasClass","registerClickHandler","setBertOnSession","show","bertTimer","off","on","clearTimeout","timer","addClass","delay","queue","dequeue","removeClass","Session","set","title","message","icon","Bert"],"mappings":"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","file":"packages/themeteorchef:bert/bert.js.map","sourcesContent":["class BertAlert {\n  constructor() {\n    this.styles = [\n      'fixed-top',\n      'fixed-bottom',\n      'growl-top-left',\n      'growl-top-right',\n      'growl-bottom-left',\n      'growl-bottom-right'\n    ];\n\n    this.types = [\n      'default',\n      'success',\n      'info',\n      'warning',\n      'danger'\n    ];\n\n    this.icons = {\n      default: 'fa-bell',\n      success: 'fa-check',\n      info: 'fa-info',\n      warning: 'fa-warning',\n      danger: 'fa-remove'\n    };\n\n    this.defaults = {\n      hideDelay: 3500,\n      style: 'fixed-top',\n      type: 'default'\n    };\n  }\n\n  alert() {\n    if ( this.isVisible() ) {\n      this.hide();\n      setTimeout( () => { this.handleAlert( arguments ); }, 300 );\n    } else {\n      this.handleAlert( arguments );\n    }\n  }\n\n  isVisible() {\n    return $( '.bert-alert' ).hasClass( 'show' );\n  }\n\n  handleAlert( alert ) {\n    this.registerClickHandler();\n    this.setBertOnSession( alert );\n    setTimeout( () => { this.show(); }, 20 );\n    this.bertTimer();\n  }\n\n  registerClickHandler() {\n    $( '.bert-alert' ).off( 'click' );\n    $( '.bert-alert' ).on( 'click', () => { this.hide(); } );\n  }\n\n  bertTimer() {\n    clearTimeout( this.timer );\n    this.timer = setTimeout( () => { this.hide(); }, this.defaults.hideDelay );\n    return this.timer;\n  }\n\n  show() {\n    $( '.bert-alert' ).addClass( 'show' ).delay( 25 ).queue( () => {\n      $( '.bert-alert' ).addClass( 'animate' ).dequeue();\n    });\n  }\n\n  hide() {\n    $( '.bert-alert' ).removeClass( 'animate' );\n    setTimeout( () => {\n      $( '.bert-alert' ).removeClass( 'show' );\n      Session.set( 'bertAlert', null );\n    }, 300 );\n  }\n\n  setBertOnSession( alert ) {\n    if ( typeof alert[0] === 'object' ) {\n      let type = alert[0].type || this.defaults.type;\n\n      Session.set( 'bertAlert', {\n        title: alert[0].title || \"\",\n        message: alert[0].message || \"\",\n        type: type,\n        style: alert[0].style || this.defaults.style,\n        icon: alert[0].icon || this.icons[ type ]\n      });\n    } else {\n      let type = alert[1] || this.defaults.type;\n\n      Session.set( 'bertAlert', {\n        message: alert[0] || \"\",\n        type: type,\n        style: alert[2] || this.defaults.style,\n        icon: alert[3] || this.icons[ type ]\n      });\n    }\n  }\n}\n\nBert = new BertAlert();\n"]},"hash":"a279f6216f8b0d628ceaa7324bca18647f736f42"}
