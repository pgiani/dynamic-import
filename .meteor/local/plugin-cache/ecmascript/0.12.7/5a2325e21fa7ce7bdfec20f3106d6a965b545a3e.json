{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/pgiani/www/meteor-example-optimize-client-bundle/imports/modules/document-editor.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/modules/document-editor.js","filename":"/Users/pgiani/www/meteor-example-optimize-client-bundle/imports/modules/document-editor.js","passPerPreset":false,"envName":"development","cwd":"/Users/pgiani/www/meteor-example-optimize-client-bundle","root":"/Users/pgiani/www/meteor-example-optimize-client-bundle","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/pgiani/www/meteor-example-optimize-client-bundle/imports/modules/document-editor.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/document-editor.js"}},"code":"module.export({\n  default: () => documentEditor\n});\nlet browserHistory;\nmodule.link(\"react-router\", {\n  browserHistory(v) {\n    browserHistory = v;\n  }\n\n}, 0);\nlet Bert;\nmodule.link(\"meteor/themeteorchef:bert\", {\n  Bert(v) {\n    Bert = v;\n  }\n\n}, 1);\nlet upsertDocument;\nmodule.link(\"../api/documents/methods.js\", {\n  upsertDocument(v) {\n    upsertDocument = v;\n  }\n\n}, 2);\nmodule.link(\"./validation.js\");\nlet component;\n\nconst handleUpsert = () => {\n  const {\n    doc\n  } = component.props;\n  const confirmation = doc && doc._id ? 'Document updated!' : 'Document added!';\n  const upsert = {\n    title: document.querySelector('[name=\"title\"]').value.trim(),\n    body: document.querySelector('[name=\"body\"]').value.trim()\n  };\n  if (doc && doc._id) upsert._id = doc._id;\n  upsertDocument.call(upsert, (error, response) => {\n    if (error) {\n      Bert.alert(error.reason, 'danger');\n    } else {\n      component.documentEditorForm.reset();\n      Bert.alert(confirmation, 'success');\n      browserHistory.push(\"/documents/\".concat(response.insertedId || doc._id));\n    }\n  });\n};\n\nconst validate = () => {\n  $(component.documentEditorForm).validate({\n    rules: {\n      title: {\n        required: true\n      },\n      body: {\n        required: true\n      }\n    },\n    messages: {\n      title: {\n        required: 'Need a title in here, Seuss.'\n      },\n      body: {\n        required: 'This thneeds a body, please.'\n      }\n    },\n\n    submitHandler() {\n      handleUpsert();\n    }\n\n  });\n};\n\nfunction documentEditor(options) {\n  component = options.component;\n  validate();\n}","map":{"version":3,"sources":["imports/modules/document-editor.js"],"names":["module","export","default","documentEditor","browserHistory","link","v","Bert","upsertDocument","component","handleUpsert","doc","props","confirmation","_id","upsert","title","document","querySelector","value","trim","body","call","error","response","alert","reason","documentEditorForm","reset","push","insertedId","validate","$","rules","required","messages","submitHandler","options"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAA4C,IAAIC,cAAJ;AAAmBJ,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA2B;AAACD,EAAAA,cAAc,CAACE,CAAD,EAAG;AAACF,IAAAA,cAAc,GAACE,CAAf;AAAiB;;AAApC,CAA3B,EAAiE,CAAjE;AAAoE,IAAIC,IAAJ;AAASP,MAAM,CAACK,IAAP,CAAY,2BAAZ,EAAwC;AAACE,EAAAA,IAAI,CAACD,CAAD,EAAG;AAACC,IAAAA,IAAI,GAACD,CAAL;AAAO;;AAAhB,CAAxC,EAA0D,CAA1D;AAA6D,IAAIE,cAAJ;AAAmBR,MAAM,CAACK,IAAP,CAAY,6BAAZ,EAA0C;AAACG,EAAAA,cAAc,CAACF,CAAD,EAAG;AAACE,IAAAA,cAAc,GAACF,CAAf;AAAiB;;AAApC,CAA1C,EAAgF,CAAhF;AAAmFN,MAAM,CAACK,IAAP,CAAY,iBAAZ;AAO/S,IAAII,SAAJ;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAUF,SAAS,CAACG,KAA1B;AACA,QAAMC,YAAY,GAAGF,GAAG,IAAIA,GAAG,CAACG,GAAX,GAAiB,mBAAjB,GAAuC,iBAA5D;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCC,KAAzC,CAA+CC,IAA/C,EADM;AAEbC,IAAAA,IAAI,EAAEJ,QAAQ,CAACC,aAAT,CAAuB,eAAvB,EAAwCC,KAAxC,CAA8CC,IAA9C;AAFO,GAAf;AAKA,MAAIT,GAAG,IAAIA,GAAG,CAACG,GAAf,EAAoBC,MAAM,CAACD,GAAP,GAAaH,GAAG,CAACG,GAAjB;AAEpBN,EAAAA,cAAc,CAACc,IAAf,CAAoBP,MAApB,EAA4B,CAACQ,KAAD,EAAQC,QAAR,KAAqB;AAC/C,QAAID,KAAJ,EAAW;AACThB,MAAAA,IAAI,CAACkB,KAAL,CAAWF,KAAK,CAACG,MAAjB,EAAyB,QAAzB;AACD,KAFD,MAEO;AACLjB,MAAAA,SAAS,CAACkB,kBAAV,CAA6BC,KAA7B;AACArB,MAAAA,IAAI,CAACkB,KAAL,CAAWZ,YAAX,EAAyB,SAAzB;AACAT,MAAAA,cAAc,CAACyB,IAAf,sBAAkCL,QAAQ,CAACM,UAAT,IAAuBnB,GAAG,CAACG,GAA7D;AACD;AACF,GARD;AASD,CAnBD;;AAqBA,MAAMiB,QAAQ,GAAG,MAAM;AACrBC,EAAAA,CAAC,CAACvB,SAAS,CAACkB,kBAAX,CAAD,CAAgCI,QAAhC,CAAyC;AACvCE,IAAAA,KAAK,EAAE;AACLjB,MAAAA,KAAK,EAAE;AACLkB,QAAAA,QAAQ,EAAE;AADL,OADF;AAILb,MAAAA,IAAI,EAAE;AACJa,QAAAA,QAAQ,EAAE;AADN;AAJD,KADgC;AASvCC,IAAAA,QAAQ,EAAE;AACRnB,MAAAA,KAAK,EAAE;AACLkB,QAAAA,QAAQ,EAAE;AADL,OADC;AAIRb,MAAAA,IAAI,EAAE;AACJa,QAAAA,QAAQ,EAAE;AADN;AAJE,KAT6B;;AAiBvCE,IAAAA,aAAa,GAAG;AAAE1B,MAAAA,YAAY;AAAK;;AAjBI,GAAzC;AAmBD,CApBD;;AAsBe,SAASP,cAAT,CAAwBkC,OAAxB,EAAiC;AAC9C5B,EAAAA,SAAS,GAAG4B,OAAO,CAAC5B,SAApB;AACAsB,EAAAA,QAAQ;AACT","sourcesContent":["/* eslint-disable no-undef */\n\nimport { browserHistory } from 'react-router';\nimport { Bert } from 'meteor/themeteorchef:bert';\nimport { upsertDocument } from '../api/documents/methods.js';\nimport './validation.js';\n\nlet component;\n\nconst handleUpsert = () => {\n  const { doc } = component.props;\n  const confirmation = doc && doc._id ? 'Document updated!' : 'Document added!';\n  const upsert = {\n    title: document.querySelector('[name=\"title\"]').value.trim(),\n    body: document.querySelector('[name=\"body\"]').value.trim(),\n  };\n\n  if (doc && doc._id) upsert._id = doc._id;\n\n  upsertDocument.call(upsert, (error, response) => {\n    if (error) {\n      Bert.alert(error.reason, 'danger');\n    } else {\n      component.documentEditorForm.reset();\n      Bert.alert(confirmation, 'success');\n      browserHistory.push(`/documents/${response.insertedId || doc._id}`);\n    }\n  });\n};\n\nconst validate = () => {\n  $(component.documentEditorForm).validate({\n    rules: {\n      title: {\n        required: true,\n      },\n      body: {\n        required: true,\n      },\n    },\n    messages: {\n      title: {\n        required: 'Need a title in here, Seuss.',\n      },\n      body: {\n        required: 'This thneeds a body, please.',\n      },\n    },\n    submitHandler() { handleUpsert(); },\n  });\n};\n\nexport default function documentEditor(options) {\n  component = options.component;\n  validate();\n}\n"]},"sourceType":"script","hash":"5a2325e21fa7ce7bdfec20f3106d6a965b545a3e"}
